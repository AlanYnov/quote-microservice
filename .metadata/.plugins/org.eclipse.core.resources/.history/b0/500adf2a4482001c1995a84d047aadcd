/*
 * Copyright 2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.lemal.library.controllers;

import java.io.IOException;
import java.text.Format;
import java.text.SimpleDateFormat;

import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.ser.std.StdSerializer;
import com.lemal.library.models.Author;
import com.lemal.library.models.Book;
import com.lemal.library.models.BookType;

/**
 * @author Vitaliy Fedoriv
 *
 */

public class JacksonCustomBookSerializer extends StdSerializer<Book> {

	public JacksonCustomBookSerializer() {
		this(null);
	}

	protected JacksonCustomBookSerializer(Class<Book> t) {
		super(t);
	}

	@Override
	public void serialize(Book book, JsonGenerator jgen, SerializerProvider provider) throws IOException {
		Format formatter = new SimpleDateFormat("yyyy/MM/dd");
		jgen.writeStartObject(); // book
		if (book.getId() == null) {
			jgen.writeNullField("id");
		} else {
			jgen.writeNumberField("id", book.getId());
		}
		jgen.writeStringField("name", book.getName());
		jgen.writeStringField("birthDate", formatter.format(book.getBirthDate()));

		BookType bookType = book.getType();
		jgen.writeObjectFieldStart("type");
		jgen.writeNumberField("id", bookType.getId());
		jgen.writeStringField("name", bookType.getName());
		jgen.writeEndObject(); // type

		Author author = book.getAuthor();
		jgen.writeObjectFieldStart("author");
		jgen.writeNumberField("id", author.getId());
		jgen.writeStringField("firstName", author.getFirstName());
		jgen.writeStringField("lastName", author.getLastName());
		jgen.writeStringField("address", author.getAddress());
		jgen.writeStringField("city", author.getCity());
		jgen.writeStringField("telephone", author.getTelephone());
		jgen.writeEndObject(); // author
		// write visits array
		jgen.writeArrayFieldStart("visits");
		/*for (Visit visit : book.getVisits()) {
			jgen.writeStartObject(); // visit
			jgen.writeNumberField("id", visit.getId());
			jgen.writeStringField("date", formatter.format(visit.getDate()));
			jgen.writeStringField("description", visit.getDescription());
			jgen.writeNumberField("book", visit.getBook().getId());
			jgen.writeEndObject(); // visit
		}*/
		jgen.writeEndArray(); // visits
		jgen.writeEndObject(); // book
	}

}
